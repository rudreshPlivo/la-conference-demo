{"version":3,"sources":["../src/app.js"],"names":["app","use","bodyParser","urlencoded","extended","json","startconference","answerurl","callbackurl","err","req","res","next","locals","message","error","get","status","render","listen","env","PORT","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,uBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,sBAAO,UAAP,CAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;;AAEAL,IAAIC,GAAJ,CAAQ,kBAAR,EAA4BK,yBAA5B;AACAN,IAAIC,GAAJ,CAAQ,gBAAR,EAA0BM,uBAA1B;AACAP,IAAIC,GAAJ,CAAQ,kBAAR,EAA4BO,yBAA5B;;AAEA;AACAR,IAAIC,GAAJ,CAAQ,UAASQ,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIE,MAAJ,CAAWC,OAAX,GAAqBL,IAAIK,OAAzB;AACAH,MAAIE,MAAJ,CAAWE,KAAX,GAAmBL,IAAIV,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCP,GAAvC,GAA6C,EAAhE;;AAEA;AACAE,MAAIM,MAAJ,CAAWR,IAAIQ,MAAJ,IAAc,GAAzB;AACAN,MAAIO,MAAJ,CAAW,OAAX;AACAN,OAAKH,GAAL;AACD,CATD;;AAWA;AACAT,IAAImB,MAAJ,CAAWC,cAAIC,IAAf,EAAqB,YAAM;AACzBC,UAAQC,GAAR,wBAAiCH,cAAIC,IAArC;AACD,CAFD","file":"app.js","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport morgan from \"morgan\";\nimport helmet from \"helmet\";\nimport env from \"./config/env\";\nimport startconference from \"./routes/startconference\";\nimport answerurl from \"./routes/confanswerurl\";\nimport callbackurl from \"./routes/confcallbackurl\";\n\nconst app = express();\n\n//security headers\napp.use(helmet());\n\n//basic logging to console\napp.use(morgan(\"combined\"));\n\n//parse incoming json and params\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n//configure routes\n\napp.use(\"/startconference\", startconference);\napp.use(\"/confanswerurl\", answerurl);\napp.use(\"/confcallbackurl\", callbackurl);\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n  next(err);\n});\n\n//start listening\napp.listen(env.PORT, () => {\n  console.log(`listening on port ${env.PORT}`);\n});\n"]}