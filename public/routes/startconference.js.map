{"version":3,"sources":["../../src/routes/startconference.js"],"names":["plivo","router","express","Router","post","req","res","next","client","Client","env","AUTH_ID","AUTH_TOKEN","volunteerNumbers","confRoomName","userNumber","altNumber","answerUrl","forEach","calls","create","number","then","console","log","response","catch","err","error","json","message"],"mappings":";;;;;;AAAA;;;;AACA;;IAAYA,K;;AACZ;;;;;;;;AAEA,IAAMC,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;AAEAF,OAAOG,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAI;AACF;AACA,QAAIC,SAAS,IAAIR,MAAMS,MAAV,CAAiBC,cAAIC,OAArB,EAA8BD,cAAIE,UAAlC,CAAb;;AAEA;AACA,QAAIC,mBAAmB,CAAC,cAAD,EAAiB,cAAjB,CAAvB;AACA;AACA,QAAIC,eAAe,cAAnB;AACA,QAAIC,aAAaF,iBAAiB,CAAjB,CAAjB,CARE,CAQoC;AACtC,QAAIG,YAAYH,iBAAiB,CAAjB,CAAhB,CATE,CASmC;;AAErC;AACA,QAAII,yDAAuDH,YAA3D;;AAEAD,qBAAiBK,OAAjB,CAAyB,kBAAU;AACjC;AACAV,aAAOW,KAAP,CACGC,MADH,CAEIC,WAAWN,UAAX,GAAwBC,SAAxB,GAAoCD,UAFxC,EAGIM,MAHJ,EAIIJ,SAJJ,EAKI;AALJ,OAMGK,IANH,CAMQ,oBAAY;AAChBC,gBAAQC,GAAR;AACAD,gBAAQC,GAAR,CAAYC,QAAZ;AACD,OATH,EASK;AATL,OAUGC,KAVH,CAUS,eAAO;AACZH,gBAAQC,GAAR;AACAD,gBAAQC,GAAR,CAAYG,GAAZ;AACD,OAbH;AAcD,KAhBD;AAiBD,GA/BD,CA+BE,OAAOC,KAAP,EAAc;AACdL,YAAQC,GAAR;AACAD,YAAQC,GAAR,CAAYI,KAAZ;AACArB,SAAKqB,KAAL;AACD,GAnCD,SAmCU;AACRtB,QAAIuB,IAAJ,CAAS;AACPC,eAAS;AADF,KAAT;AAGD;AACF,CAzCD;;kBA2Ce7B,M","file":"startconference.js","sourcesContent":["import express from \"express\";\nimport * as plivo from \"plivo\";\nimport env from \"./../config/env\";\n\nconst router = express.Router();\n\n//handle incoming post to start the conference\n\nrouter.post(\"/\", (req, res, next) => {\n  try {\n    //create plivo client instance\n    var client = new plivo.Client(env.AUTH_ID, env.AUTH_TOKEN);\n\n    //numbers array -- these numbers can also be sent in the post request body\n    var volunteerNumbers = [\"919825069909\", \"919825082101\"];\n    //decide the room name of the conference and make it a parameter in answer url\n    var confRoomName = \"919825069909\";\n    var userNumber = volunteerNumbers[0]; //first number in the array to be used as caller id\n    var altNumber = volunteerNumbers[1]; //for user number because same number can't be both toNumber and fromNumber\n\n    //having a unique answer_url per group makes it trivial to ensure members of the group join same conference room\n    var answerUrl = `http://la-conference-demo.herokuapp.com/${confRoomName}`;\n\n    volunteerNumbers.forEach(number => {\n      //trigger a call to each number in the array\n      client.calls\n        .create(\n          number === userNumber ? altNumber : userNumber,\n          number,\n          answerUrl\n        ) //if call attempt was successful then you would receive response from plivo\n        .then(response => {\n          console.log(`response from plivo will contain request uuid`);\n          console.log(response);\n        }) //if not then you'll get an error but next caller will be dialed\n        .catch(err => {\n          console.log(`this is error response from plivo`);\n          console.log(err);\n        });\n    });\n  } catch (error) {\n    console.log(`catching error in creating the plivo client`);\n    console.log(error);\n    next(error);\n  } finally {\n    res.json({\n      message: \"received your request. will start making calls\"\n    });\n  }\n});\n\nexport default router;\n"]}